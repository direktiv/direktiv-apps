name: Store
on:
  push:
    tags: "*"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
  
    - name: Create-AppDir
      run: mkdir store
    
    - name: Move-Dockerfile
      run: cp googlepusher/Dockerfile ./store/

    - name: Move-Request-Readme
      run: cp googlepusher/readme.md ./store/
    
    - name: Find-Oauth2
      run: go get golang.org/x/oauth2
    - name: Find-JWT
      run: go get golang.org/x/oauth2/jwt
    - name: Find-Sheets
      run: go get google.golang.org/api/sheets/v4
    - name: Build
      run: CGO_ENABLED=0 go build -o ./store/store googlepusher/googlepusher.go
    
    - uses: actions/upload-artifact@v2
      with:
        name: store
        path: store

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Store Application
      uses: actions/download-artifact@v2
      with:
        name: store
        path: store
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # - name: Add SHORT_SHA env property with commit short sha
    #   run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: vorteil/store:latest
        context: .
        file: ./store/Dockerfile
        platforms: linux/amd64

    - name: Build and Push
      id: docker_build2
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: vorteil/store:${{ steps.get_version.outputs.VERSION }}
        context: .
        file: ./store/Dockerfile
        platforms: linux/amd64

    - name: Sync
      uses: ms-jpq/sync-dockerhub-readme@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vorteil/store
        readme: "./store/readme.md"
