name: greeting
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Create-AppDir
      run: mkdir greeting
    - name: Move-Dockerfile
      run: cp greeter/Dockerfile ./greeting/
    - name: Move-Readme
      run: cp greeter/readme.md ./greeting/      
    - name: Build
      run: CGO_ENABLED=0 go build -o ./greeting/greeting greeter/main.go
    - uses: actions/upload-artifact@v2
      with:
        name: greeting
        path: greeting
  
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Greeting Application
      uses: actions/download-artifact@v2
      with:
        name: greeting
        path: greeting
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}  
    
    # - name: Get the version
    #   id: get_version
    #   run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: chmod +x greeting binary
      run: sudo chmod +x ./greeting/greeting

    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: vorteil/greeting:latest
        context: .
        file: ./greeting/Dockerfile
        platforms: linux/amd64

    - name: Build and Push
      id: docker_build2
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: vorteil/greeting:${{ github.event.inputs.tags }}
        context: .
        file: ./greeting/Dockerfile
        platforms: linux/amd64

    - name: Sync
      uses: ms-jpq/sync-dockerhub-readme@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: vorteil/greeting
        readme: "./greeting/readme.md"